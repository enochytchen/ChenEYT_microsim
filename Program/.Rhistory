axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position="bottom",
legend.box="vertical",
legend.key = element_rect(colour = NA, fill = NA))
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed")) +  # Specify linetypes
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list(
linetype = c("solid", "dashed")  # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed")) +  # Specify linetypes
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed")) +  # Specify linetypes
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed")) +  # Specify linetypes
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed")) +  # Specify linetypes
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list(
linetype = c("solid", "dashed")  # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list(
linetype = c("solid", "dashed")  # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list(
linetype = c("solid", "dashed")  # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(
values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed"),
breaks = c("Microsimulation", "Semi-Markov"),  # Specify breaks
labels = c("Microsimulation", "Semi-Markov")  # Specify labels
) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
scale_linetype_manual(
values = c("Microsimulation" = "solid", "Semi-Markov" = "dashed"),
breaks = c("Microsimulation", "Semi-Markov"),  # Specify breaks
labels = c("Microsimulation", "Semi-Markov")  # Specify labels
) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list(
linetype = c("solid", "dashed")  # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list(
linetype = c("", "")  # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot <- ggplot() +
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation", linetype = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov", linetype = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000), expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,
keyheight = 1,
override.aes = list( # Specify linetypes for the legend
)
)
) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position = "bottom",
legend.box = "vertical",
legend.key = element_rect(colour = NA, fill = NA)
)
plot
plot<- ggplot()+
geom_line(data = CEAC_Data, aes(x = Threshold, y = Prob_CE, color = "Microsimulation"), linewidth = 1.0) +
geom_line(data = williams2017_PSA_CEAC, aes(x = Threshold, y = Prob_CE_williams, color = "Semi-Markov"), linewidth = 1.0) +
scale_x_continuous(breaks = seq(0, 100000, 20000), limits = c(0, 100000),
expand = c(0.05, 0.05), labels = scales::comma) +
scale_color_manual(values = c("Microsimulation" = "cornflowerblue", "Semi-Markov" = "orange")) +
ylim(0, 1) +
xlab("Cost-effectiveness threshold (£)") +
ylab("Probability of RFC being cost-effective") +
labs(color = "") +
guides(
color = guide_legend(
keywidth = 2,  # Adjust the width of the legend key
keyheight = 1,  # Adjust the height of the legend key
override.aes = list(
linetype = c("solid", "solid")
)
)
) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.key.size = unit(0.4, 'cm'),
legend.position="bottom",
legend.box="vertical",
legend.key = element_rect(colour = NA, fill = NA))
plot
1
1
dplyr::last_dplyr_warnings()
str(data)
data2=data
sum(is.na(data$rate3))
dim(data)
head(which(is.na(data$rate3)))
data2[head(which(is.na(data$rate3))),]
data[777,]
?is.numeric
data2[head(which(is.na(data$rate3)),50),]
data2[head(which(is.na(data$rate3)),50),]
table(data$country[is.na(data$rate3)])
sys.frame(0)
sys.frame(0)$ofile
dirname(sys.frame(0)$ofile)
sys.frame(-1)$ofile
sys.frame(0)$ofile
sys.frame(0)
library(hesim)
ls(2)
flexsurvreg_list
?params_surv
?flexsurvreg_list
?params_surv
params
class(params)
methods(class=class(params))
flexsurvreg
search()
ls(2)
?create_params
shell
fast_rgengamma
transmod_params
transmod
transmod
traceback()
tmat
names(transmod)
transmod$trans_mat
transmod$trans_mat
transmod$input_data
traceback()
transmod$X
transmod$input_data$X
?flexsurvreg
names(fitg)
fitg$aux
fitg$coefficients
fitg$coefficients
rgompertz
flexsurvreg_list
traceback()
transmod3
trans_params3
transmod_params3
transmod$params
names(transmod$params)
names(transmod2$params)
transmod2$input_data
transmod$input_data
head(transmod_data)
?create_IndivCtstmTrans
head(patients)
head(transmod_data)
q()
n
quit
n
exit
y
